Both Book and Page classes are annotated with the Entity annotation to indicate that they are JPA entities.

The @Table annotation is used to specify the name of the database table that should be mapped to this entity.

The id attributes are annotated with both @Id and @GeneratedValue annotations. 
The former annotation indicates that they are the primary keys of the entities. 
The latter annotation defines the primary key generation strategy. In the above case, we have declared that the primary key should be an AUTO INCREMENT field.

@OneToMany Annotation
A one-to-many relationship between two entities is defined by using the @OneToMany annotation in Spring Data JPA. 
It declares the mappedBy element to indicate the entity that owns the bidirectional relationship. Usually, 
the child entity is one that owns the relationship and the parent entity contains the @OneToMany annotation.

@ManyToOne Annotation
The @ManyToOne annotation is used to define a many-to-one relationship between two entities in Spring Data JPA. 
The child entity, that has the join column, is called the owner of the relationship defined using the @ManyToOne annotation.

@JoinColumn Annotation
The @JoinColumn annotation is used to specify the foreign key column in the owner of the relationship. 
The inverse-side of the relationship sets the mappedBy attribute to indicate that the relationship is owned by the other entity.